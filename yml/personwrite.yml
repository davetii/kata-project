openapi: 3.0.0
info:
  description: Person Write API
  version: "1.0.0"
  title: Person Write API
  contact:
    email: davetii@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:8080/api
    description: Local Server
paths:
  /v1/newid:
    get:
      summary: fetch a new ID
      operationId: fetchNewId
      responses:
        '200':
          description: new id
          content:
            text/plain:
              schema:
                type: string
                example: abc123
  /v1/person/{personid}:
    get:
      summary: fetch Person by ID
      operationId: fetchPerson
      parameters:
        - $ref: "#/components/parameters/personIdPathParam"
      responses:
        '200':
          description: Found Person
          content:
            application/json:
              schema:
                $ref: "person.yml#/components/schemas/Person"
        '404':
          description: Not Found
    delete:
      summary: delete Person by ID
      operationId: deletePerson
      parameters:
        - $ref: "#/components/parameters/personIdPathParam"
      responses:
        '204':
          description: Person removed
        '404':
          description: Not Found
  /v1/person:
    put:
      summary: Upsert Person
      description: Save Person to Database
      operationId: upsertPerson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonWriteRequest"
      responses:
        '200':
          description: Person Saved
          content:
            application/json:
              schema:
                $ref: "person.yml#/components/schemas/Person"
components:

  parameters:
    personIdPathParam:
      in: path
      description: Person ID
      name: personid
      required: true
      schema:
        type: string
  
  schemas:
    PersonWriteRequest:
      type: object
      required: [id, firstName, lastName, role, email, org, hiredate, level]
      description: PersonWriteRequest
     
      properties:
        id:
          type: string
          example: abc123
        firstName:
          type: string
          example: Dave
        lastName:
          type: string
          example: Turner
        org:
          type: string
          enum: [SALES, SERVICE, MARKETING, HR, ENGINEERING, BUSINESS, IT, OPERATIONS]
        role:
          type: string
          enum: [DEV, QA, MGR, OPS, ANALYST, DBA, CSR]
        locale:
          type: string
          enum: [en-US, en-CA, fr-CA, es-MX, es-US]
          default: en-US
        level:
          type: integer
          default: 1
        hireDate:
          type: string
          format: date
        email:
          type: string
          example: davetii@gmail.com
        addr1:
          type: string
          example: 123 nowhere
        addr2:
          type: string
          example: po box 34
        city:
          type: string
          example: harrison
        region:
          type: string
          example: MI
        country:
          type: string
          example: US
        phone1:
          type: string
          example: 15868736131
        phone2:
          type: string
          example: 15868736131